{
	"theme": {
		"light": "Light",
		"dark": "Dark",
		"paletteMode": "Palette mode",
		"theme": "Theme",
		"helperText": "Your theme preference is saved in your currently used browser and is not propagated to a different device"
	},
	"i18n": {
		"language": "Language",
		"helperText": "Your language preference is saved in your currently used browser and is not propagated to a different device"
	},
	"features": {
		"overview": "Overview",
		"amenities": "Amenities",
		"rolesPermissions": "Roles & Permissions",
		"residentDetails": "Suite Management",
		"tickets": "Tickets",
		"announcements": "Announcements",
		"alarmLogs": "Alarm Logs",
		"users": "Users",
		"doors": "Doors",
		"accessControlLogs": "Access Control Logs",
		"groups": {
			"buildingManagement": "Building Management",
			"bookings": "Bookings",
			"services": "Services",
			"management": "Management",
			"logs": "Logs",
			"units": "Units",
			"accessControl": "Access Control",
			"alarmConfig": "Alarm Configurations",
			"visitorPass": "Visitor Pass"
		},
		"alarmsRecipientConfiguration": "Alarm Configurations",
		"buildingAccessPoint": "Building Access Points",
		"buildingAutomation": "Automations",
		"visitorPass": "Visitor Pass",
		"suiteCapacity": "Suite Capacity",
		"elevatorAccessLogs": "Elevator Access Logs"
	},
	"errors": {
		"requiredField": "Please enter {{ field, lowercase }}",
		"invalidFormat": "Please enter a valid {{ field, lowercase }}",
		"maxLength": "Please do not enter more than {{ max }} characters",
		"minLength": "Please enter at least {{ min }} characters",
		"max": "Please enter a value no more than {{ max }}",
		"min": "Please enter a value greater than {{ min }}",
		"noDays": "Please select at least one day",
		"noSelection": "Please select at least one option",
		"required": {
			"firstName": "Please enter first name",
			"lastName": "Please enter last name",
			"email": "Please enter email",
			"phoneNumber": "Please enter your phone number",
			"availabilityComment": "Please enter availability comment"
		},
		"invalid": {
			"email": "Please enter a valid email",
			"phoneNumber": "Please enter a valid phone number"
		}
	},
	"auth": {
		"processing": "Processing",
		"signIn": "Sign In",
		"signOut": "Sign Out",
		"signOutConfirmation": "Would you like to sign out?",
		"noAccess": "You are not authorized to view this page"
	},
	"general": {
		"welcome": "Welcome To",
		"appName": "Management Console",
		"settings": "Settings",
		"morning": "Good Morning, {{ username }}!",
		"afternoon": "Good Afternoon, {{ username }}!",
		"evening": "Good Evening, {{ username }}!",
		"night": "Good Night, {{ username }}!",
		"openDrawer": "open drawer",
		"navigation": "navigation",
		"loading": "Loading",
		"you": "You"
	},
	"data": {
		"create": "Create",
		"add": "Create {{ field }}",
		"edit": "Edit",
		"delete": "Delete",
		"update": "Update",
		"verify": "Verify",
		"cancel": "Cancel",
		"submit": "Submit",
		"attachment_other": "Attachments",
		"reset": "Reset",
		"refresh": "Refresh",
		"clear": "Clear",
		"all": "All",
		"suite": "Suite",
		"suite_other": "Suites",
		"from": "From",
		"to": "To",
		"action": "Action",
		"action_other": "Actions",
		"subject": "Subject",
		"building": "Building",
		"building_other": "Buildings",
		"floor": "Floor",
		"user": "User",
		"user_other": "Users",
		"name": "Name",
		"firstName": "First Name",
		"lastName": "Last Name",
		"phoneNumber": "Phone Number",
		"email": "Email",
		"closed": "Closed",
		"open": "Open",
		"note": "Note",
		"note_other": "Notes",
		"createdAt": "Created At",
		"createdBy": "Created By",
		"status": "Status",
		"close": "Close",
		"resident": "Resident",
		"resident_other": "Residents",
		"date": "Date",
		"time": "Time",
		"readOnly": "Read-only",
		"exportCSV": "Export CSV",
		"type": "Type",
		"state": "State",
		"noData": "No data found",
		"suitesSelectAll": "Select all suites",
		"selectFloor": "Select Floor",
		"chooseFile": "Choose File...",
		"clearFilters": "Clear Filters",
		"content": "Content",
		"continue": "Continue",
		"toggleColumns": "Toggle Columns",
		"notification": "Notification",
		"notification_other": "Notifications",
		"next": "Next",
		"back": "Back",
		"details": "Details",
		"addTimeSlot": "Add Time Slot",
		"removeTimeSlot": "Remove Time Slot",
		"daysOfWeek": {
			"sunday": "Sunday",
			"monday": "Monday",
			"tuesday": "Tuesday",
			"wednesday": "Wednesday",
			"thursday": "Thursday",
			"friday": "Friday",
			"saturday": "Saturday",
			"mon": "Mon",
			"tue": "Tue",
			"wed": "Wed",
			"thu": "Thu",
			"fri": "Fri",
			"sat": "Sat",
			"sun": "Sun"
		},
		"send": "Send",
		"invite": "Invite",
		"save": "Save",
		"expiration": "Expiration",
		"confirm": "Confirm",
		"at": "at",
		"states": {
			"Active": "Active",
			"Inactive": "Inactive",
			"Pending": "Pending",
			"Rejected": "Rejected",
			"Completed": "Completed",
			"Cancelled": "Cancelled",
			"Approved": "Approved",
			"InProgress": "In Progress",
			"Expired": "Expired"
		},
		"yes": "Yes",
		"no": "No",
		"addAction": "Add Action",
		"temperatue": "Temperature",
		"disable": "Disable",
		"enable": "Enable",
		"auto": "Auto",
		"on": "On",
		"resume": "Resume",
		"pause": "Pause",
		"remove": "Remove",
		"search": "Search",
		"managers": "Managers",
		"invitations": "Invitations"
	},
	"notFound": {
		"heading": "You have found a secret place",
		"description": "Unfortunately, this is only a 404 page. You may have mistyped the address, or the page has been moved to another URL",
		"action": "Get back to overview page"
	},
	"notAuthorized": {
		"heading": "Not Authorized",
		"description": "Sorry, but you don't have rights to go there",
		"action": "Get back to overview page"
	},
	"serverError": {
		"heading": "Something went wrong",
		"description": "Please try again later",
		"action": "Get back to overview page"
	},
	"badRequest": {
		"heading": "Something went wrong",
		"description": "Please report this issue to us",
		"action": "Get back to overview page"
	},
	"dropzone": {
		"drag": "Drag and drop a file here to upload",
		"drop": "Drop file here",
		"incorrectExtantion": "This file type is not allowed",
		"largeFile": "Maximum allowed file size is 4 MB",
		"amountLimit": "Maximum number of files allowed is 5",
		"uploadError": "File could not be uploaded",
		"deleteError": "File could not be deleted"
	},
	"settings": {
		"changeBuilding": "Change Building",
		"profile": "Profile",
		"securityPrivacy": "Security and Privacy",
		"preferences": "Preferences",
		"personalInformation": "Personal Information",
		"password": "Password",
		"changePassword": "Change Password",
		"changePasswordDescription": "This action will send a reset password link to your email",
		"accessCode": "Access Code",
		"newPassword": "New Password",
		"updatePassword": "Update Password",
		"verifyEmail": "Verify Email",
		"verifyAccessCode": "Verify Access Code",
		"newBookingNotification": "Booking Created",
		"newTicketNotification": "Ticket Created",
		"packages": "Packages",
		"overduePackageNotification": "Package not picked up",
		"notifications": "Notifications",
		"residentLimitExeeded": "Resident Limit Exceeded",
		"emailNotifications": "Email Notifications",
		"deliveryReport": "Delivery Report",
		"occupancy": "Occupancy",
		"toast": {
			"sendingResetPasswordLink": "Sending reset password link",
			"resetPasswordLinkSent": "The password link has been sent successfully",
			"sendResetPasswordLinkError": "An error occurred while sending the reset password link",
			"updatingPersonalInformation": "Updating personal information",
			"personalInformationUpdated": "Personal information has been successfully updated",
			"updatePersonalInformationError": "Personal information could not be updated",
			"removingMFA": "Removing Multi-Factor Authentication",
			"MFARemoved": "Multi-Factor Authentication has been removed",
			"removeMFAError": "Failed to remove Multi-Factor Authentication",
			"verifyingMFA": "Verifying Multi-Factor Authentication",
			"MFAverified": "Multi-Factor Authentication has been enabled",
			"verifyMFAError": "Failed to verify Multi-Factor Authentication. Please try again",
			"updatingNotifications": "Updating notifications configuration",
			"notificationsUpdated": "Notifications configuration has been updated",
			"updatingNotificationsError": "Notifications configuration could not be updated"
		},
		"mfa": {
			"mfaFull": "Multi-Factor Authentication",
			"mfaDescription": "Keep your account safe with Multi-factor Authentication",
			"confirmTitle": "Configure your authenticator app",
			"confirmDescription": "Complete the following steps to configure your authenticator app",
			"addMoreMfaButton": "Add Multi-Factor Authentication",
			"setupButton": "Setup Multi-Factor Authentication",
			"removeButton": "Remove Multi-Factor Authentication",
			"setupStep1Title": "Step 1: Download an authenticator app",
			"setupStep1Description": "Download and install any authenticator app on your phone ",
			"exampleAbbreviation": "E.g. ",
			"setupStep2Title": "Step 2: Scan the QR code",
			"setupStep2Description": "Open the authenticator app and scan the image below using your phone's camera",
			"setupStep2ManualInput": "You can also manually enter the following code on your authenticator app",
			"setupStep3Title": "Step 3: Verify your code",
			"setupStep3Description": "Enter the 6-digit verification code generated",
			"mfaRecoveryDescription": "These are recovery codes to be used if you are unable to access your authenticator",
			"mfaRecoveryWarning": "Write these down and don't lose them, this is the only time they will appear",
			"nickname": "Nickname for your authenticator (Optional)",
			"totp": "6-digit Code",
			"QRImageAlt": "The QR code to set up authenticator",
			"errors": {
				"codeInvalid": "Please enter a valid 6-digit code"
			}
		}
	},
	"amenities": {
		"booking": "Booking",
		"booking_other": "Bookings",
		"amenity": "Amenity",
		"attendees": "Attendees",
		"states": {
			"Pending": "Pending",
			"Rejected": "Rejected",
			"Completed": "Completed",
			"Cancelled": "Cancelled",
			"Approved": "Approved",
			"InProgress": "In Progress",
			"Expired": "Expired"
		},
		"comment": "Availability Comment",
		"daily": "Daily",
		"hourly": "Hourly",
		"hotel": "Hotel",
		"capacityPerBooking": "Capacity per booking",
		"active": "Active",
		"location": "Location",
		"capacity": "Capacity",
		"description": "Description",
		"images": "Images",
		"checkIn": "Check In Time",
		"checkOut": "Check Out Time",
		"errorMessages": {
			"availabilityNoteRequired": "Please enter availability comment",
			"suitesRequired": "Please enter suites",
			"residentRequired": "Please enter resident",
			"dateRequired": "Please enter date",
			"timeRequired": "Please enter time",
			"invalidDateRange": "Please select a valid date for your booking",
			"amenityRequired": "Please enter amenity",
			"attendeesAmountRequired": "Please select the attendees amount",
			"invalidAdvanceTime": "Please select maximum advance booking time bigger then minimum advance booking time plus one booking period",
			"invalidInterval": "Please select booking interval less or same as amenity working hours",
			"nameDuplication": "Please choose a name that has not been selected yet",
			"numberExceedsTotalCapacity": "Please enter a number that does not exceed total capacity",
			"minTimeBiggerThanMax": "Please enter a number that does not exceed Maximum Advance Booking Time",
			"maxTimeIsBig": "Please select a time that is within the Maximum Booking Duration",
			"needApprovalIsRequired": "Please toggle Approvals \"On\" since Booking Requirements are mandatory",
			"rejectReasonRequired": "Please enter a Reason for Rejection",
			"capacityInvalid": "Please enter a valid capacity",
			"capacityPerBookingInvalid": "Please enter a valid capacity per booking",
			"maxBookingPerIntervalInvalid": "Please enter a valid number of bookings per interval",
			"policyNameRequired": "Please enter Terms & Conditions Name",
			"policyDescriptionRequired": "Please enter Terms & Conditions Description",
			"policyContentRequired": "Please enter Terms & Conditions Content",
			"requirementNameRequired": "Please enter Booking Requirements Name",
			"requirementDescriptionRequired": "Please enter Booking Requirements Description"
		},
		"createAmenity": "Create Amenity",
		"createAmenityBooking": "Create Amenity Booking",
		"bookAmenity": "Book Amenity",
		"editAmenity": "Edit Amenity",
		"editHours": "Edit Hours",
		"deleteAmenity": "Delete Amenity",
		"updateAmenity": "Update Amenity",
		"cancelBookingTitle": "Cancel Booking",
		"cancelBooking": "Confirm Cancellation",
		"deleteBooking": "Delete Amenity Booking",
		"editBooking": "Edit Booking",
		"bookingForResident": "Booking for resident",
		"attendeesAmount": "Attendees amount",
		"currentTimeSlot": "Current Time Slot",
		"pendingBookingsLabel": "pending amenity bookings",
		"selectHours": "Select Hours",
		"seeAllBookings": "See All Amenity Bookings",
		"pendingBookings": "Pending Amenity Bookings",
		"totalPending": "Total Pending {{ number }}",
		"noAmenities": "There are no amenities yet",
		"noBookings": "There are no amenity bookings yet",
		"deleteAmenityDialogTextWarning": "This action will permanently delete this amenity",
		"numberOfGuests": "Number of total attendees",
		"scheduleAndApprove": "Schedule & Approve",
		"updateAndApprove": "Update & Approve",
		"requirementsDisclamer": "All requirements should be checked before approval",
		"requirementsDescription": "Please mark off any of the below requirements that have been fulfilled up until this point:",
		"hoursOfOperation": "Operational Hours",
		"bookingDetails": "Booking Details",
		"dateTime": "Date & Time",
		"requirements": "Requirements",
		"spotsPer": "spots per",
		"for": "for",
		"limitsExplanation": "Limit the number of times a user is allowed to book this specific amenity within a particular period",
		"restrictions": "Restrictions",
		"guests": "Guests",
		"none": "None",
		"rejectBooking": "Reject Booking",
		"reasonForRejection": "Reason for Rejection",
		"approvals": "Approvals",
		"approvalsDisclamer": "If approvals are disabled, all bookings for this amenity will be automatically approved and cannot be edited later",
		"locationExample": "E.g. Floor L | Room 101",
		"termsConditions": "Terms & Conditions",
		"termsConditionsDiscalmer": "Users will be required to agree to the below terms & conditions in order to successfully book this amenity",
		"minMaxTime": "Min / Max Advance Booking Time",
		"minTimeDisclamer": "Bookings must be requested in advance by a minimum of",
		"maxTimeDisclamer": "Bookings must be requested in advance by a maximum of",
		"addRequirement": "Add Requirement",
		"mandatory": "Make requirement mandatory ",
		"serviceCapacity": "Service Capacity",
		"totalAmenityCapacity": "Total amenity capacity",
		"person": "Person(s)",
		"numberOfBookingsPerInterval": "Number of bookings per interval",
		"maxBookingPerInterval": "Maximum Number of bookings per interval",
		"operationalHours": "Operational Hours",
		"dailyDesciption": "Bookings occur on a daily basis",
		"hourlyDescription": "Bookings occur on a per hour basis",
		"bookingDuration": "Booking Duration",
		"bookingDurationDescription": "Bookings can have an interval of",
		"maxBookingDurationDescription": "Bookings can have a maximum interval of",
		"number": "Number",
		"totalCapacity": "Total Capacity",
		"bookingCapacity": "Booking Capacity",
		"maxGuest": "Max {{ capacityPerBooking }} guest(s)",
		"allAmenities": "All Amenities",
		"amenityBookingsSearch": "Search by booking no. or resident",
		"createAmenityLink": "Create your first Amenity by clicking \"Create Amenity\" button",
		"addTerm": "Add Term / Condition",
		"viewMore": "View More",
		"approvalsLabel": "Booking requires manager approval/confirmation",
		"actions": {
			"reject": "Reject",
			"cancel": "Cancel",
			"approve": "Approve"
		},
		"toast": {
			"creatingAmenity": "Creating amenity",
			"amenityCreated": "Amenity has been successfully created",
			"createAmenityError": "Amenity could not be created",
			"updatingAmenity": "Updating amenity",
			"amenityUpdated": "Amenity has been successfully updated",
			"updateAmenityError": "Amenity could not be updated",
			"deletingAmenity": "Deleting amenity",
			"amenityDeleted": "Amenity has been successfully deleted",
			"deleteAmenityError": "Amenity couldn't be deleted",
			"cancellingBooking": "Cancelling booking",
			"bookingCancelled": "Booking has been cancelled",
			"cancelBookingError": "Booking couldn't be cancelled",
			"approvingBooking": "Approving booking",
			"bookingApproved": "Booking has been approved",
			"approveBookingError": "Booking couldn't be approved",
			"creatingAmenityBooking": "Creating amenity booking",
			"amenityBookingCreated": "Amenity booking has been successfully created",
			"createAmenityBookingError": "Amenity booking could not be created",
			"updatingAmenityBooking": "Updating amenity booking",
			"amenityBookingUpdated": "Amenity booking has been successfully updated",
			"updateAmenityBookingError": "Amenity booking could not be updated",
			"rejectingBooking": "Rejecting booking",
			"bookingRejected": "Booking has been rejected",
			"rejectBookingError": "Booking couldn't be rejected"
		},
		"unavailableDisclaimer": "If the amenity is unavailable, existing bookings will need to be cancelled manually. The amenity is closed and unavailable for bookings at this time",
		"maxMinBookingTimeDisclamer": "If minimum advance booking time is set to 0, then residents will be able to book amenities immediately before their desired booking time. If maximum advance booking time is set to 0, then residents will be able to book amenities up to a year in the future",
		"numberOfBookingsPerIntervalDescription": "Maximum number of bookings that can occur simultaneously",
		"maximum": "Maximum",
		"tabs": {
			"overview": "Overview",
			"scheduling": "Scheduling",
			"bookingPolicy": "Booking Policy"
		}
	},
	"announcements": {
		"announcement": "Announcement",
		"announcement_other": "Announcements",
		"createAnnouncement": "Create Announcement",
		"updateAnnouncement": "Update Announcement",
		"criticalAnnouncement": "Critical Announcement",
		"criticalCheckbox": "Mark as critical announcement",
		"criticalDisclaimer": "Critical announcements will be delivered to all residents, bypassing individual communication preferences",
		"types": {
			"label": "Announcement Types",
			"EMAIL": "Email",
			"SMS": "SMS",
			"WALLPAD": "Wallpad",
			"PUSH": "Mobile Phone Notification"
		},
		"sendAt": {
			"helperText": "Scheduled announcements cannot be cancelled or updated 10 minutes before their schedule time",
			"label": "Send At"
		},
		"content": "Content",
		"recipients": "Recipients",
		"scheduleSend": "Schedule Send",
		"sendScheduled": "Send at scheduled time",
		"saveDraft": "Save as Draft",
		"preview": "Preview",
		"cancel": "Cancel Announcement",
		"deleteHelperText": "This action will cancel the announcement",
		"keep": "Keep Announcement",
		"statuses": {
			"unknown": "Unknown",
			"processing": "Processing",
			"sent": "Sent",
			"scheduled": "Scheduled",
			"error": "Error",
			"cancelled": "Cancelled",
			"scheduledmodified": "Scheduled Modified",
			"draft": "Draft"
		},
		"errorMessages": {
			"emptySubject": "Please enter the announcement subject",
			"emptyContent": "Please enter the announcement content",
			"emptyMethod": "Please select at least one announcement method",
			"emptySuite": "Please select at least one suite",
			"futureDate": "Please enter a future date or leave the field blank to send the announcement right away",
			"latestTime": "Please select time that is in more then 10 minutes"
		},
		"statusMessage": "{{ status }} at {{ date }}",
		"editingNotAllowed": "Scheduled announcements cannot be edited 10 minutes before their scheduled time",
		"cancellingNotAllowed": "Scheduled announcements cannot be cancelled 10 minutes before their scheduled time",
		"toast": {
			"creatingAnnouncement": "Creating announcement",
			"announcementCreated": "Announcement has been successfully created",
			"createAnnouncementError": "Announcement could not be created",
			"cancellingAnnouncement": "Cancelling announcement",
			"announcementCancelled": "Announcement has been successfully cancelled",
			"cancelAnnouncementError": "Announcement couldn't be cancelled",
			"updatingAnnouncement": "Updating announcement",
			"announcementUpdated": "Announcement has been successfully updated",
			"updateAnnouncementError": "Announcement could not be updated"
		},
		"latestAnnouncementsLabel": "latest announcements",
		"noAnnouncementsTitle": "No Results",
		"noAnnouncementsDescription": "There are no announcements yet",
		"drafts": "My Drafts",
		"latestAnnouncements": "Latest Announcements",
		"seeAll": "See All Announcements",
		"scheduledInfo": "Scheduled announcements cannot be cancelled or updated 10 minutes before their scheduled time",
		"selectAll": "Select All",
		"emailToMe": "Email a copy to me",
		"sentBy": "Sent By",
		"notificationPreferencesDisadbledDislamer": "View Notification Preferences can only be clicked after selecting at least one suite and an announcement type",
		"viewNotificationPreferences": "View Notification Preferences",
		"notificationPreferencesTooltip": "View notifications enabled by residents",
		"notificationPreferences": "Notification Preferences",
		"notificationPreferencesDisclamer": "Based on the announcement type you choose, you can view the average number of residents having the respective notifications turned on or off",
		"successPreviewText": "Suites where AT LEAST ONE resident has notifications TURNED ON",
		"failPreviewText": "Suites where ALL residents have TURNED OFF notifications",
		"richTextEditorDisclamer": "Rich Text features, such as bold, lists, colours, etc. are displayed on email announcement types. Any other announcement type will display as Plain Text",
		"uploadDisclamer": "Files can only be sent with email attachments. Maximum file size allowed is 4MB",
		"tooltip": {
			"cannotEditSent": "Announcements cannot be edited after they have been sent",
			"cannotCancelSent": "Announcements cannot be cancelled after they have been sent",
			"cannotEditCancelled": "Announcements cannot be edited after they have been cancelled",
			"cannotCancelCancelled": "The announcement cannot be cancelled",
			"cannotEditError": "Announcements cannot be edited if there is an error",
			"cannotCancelError": "Announcements cannot be cancelled if there is an error"
		}
	},
	"tickets": {
		"ticket": "Ticket",
		"sendMessage": "Send a message",
		"statuses": {
			"created": "Created",
			"pending": "Pending",
			"resolved": "Resolved",
			"reopened": "Reopened",
			"archived": "Archived"
		},
		"createTicket": "Create Ticket",
		"updateTicket": "Update Ticket",
		"deleteTicket": "Delete Ticket",
		"deleteTicketDialogTextWarning": "This action will permanently delete this ticket",
		"category": "Category",
		"severity": "Severity",
		"ticketDetails": "Ticket Details",
		"toast": {
			"createTicketLoading": "Creating ticket",
			"createTicketSuccess": "Ticket has been created successfully",
			"createTicketError": "Unable to create ticket",
			"deleteTicketLoading": "Deleting ticket",
			"deleteTicketSuccess": "Ticket has been deleted successfully",
			"deleteTicketError": "Ticket has not been deleted",
			"addMessageLoading": "Sending message",
			"addMessageSuccess": "Message sent",
			"addMessageError": "Message could not be sent"
		},
		"errorMessages": {
			"subjectInvalid": "Please enter a valid subject",
			"suiteRequired": "Please select a suite",
			"categoryRequired": "Please enter category",
			"severityRequired": "Please enter severity",
			"noteInvalid": "Please enter a valid note"
		}
	},
	"permissions": {
		"createRoleMessage": "Please, create a role",
		"role": "Role",
		"role_other": "Roles",
		"roleName": "Role Name",
		"invalidRoleError": "Please, enter a unique role name",
		"noRoleError": "Please, enter a role name",
		"createRole": "Create Role",
		"editRoles": "Add/Remove Roles",
		"deleteRole": "Delete Role",
		"propertyManager": {
			"managerRoles": "Manager Roles"
		},
		"concierge": {
			"conciergeRoles": "Concierge Roles"
		},
		"toast": {
			"creatingRole": "Creating Role",
			"roleCreated": "Role has been successfully created",
			"createRoleError": "Role could not be created",
			"updatingRolePermissions": "Updating role permissions",
			"rolePermissionsUpdated": "Role permissions were successfully updated",
			"updateRolePermissionsError": "Role permissions could not be updated",
			"deletingRole": "Deleting role",
			"roleDeleted": "Role has been successfully deleted",
			"deleteRoleError": "Role couldn't be deleted",
			"updatingManagerRoles": "Updating user roles",
			"managerRolesUpdated": "User roles have been successfully updated",
			"updateManagerRolesError": "User roles could not be updated",
			"removingManagerRoles": "Removing user roles",
			"managerRolesRemoved": "User roles have been successfully removed",
			"removingManagerRolesError": "User roles could not be removed",
			"addingManagerRoles": "Adding user roles",
			"managerRolesAdded": "User role have been successfully added",
			"addingManagerRolesError": "User roles could not be added",
			"removingPermission": "Removing permission from role",
			"permissionRemoved": "Permission has been successfully removed from role",
			"removePermissionError": "Permission couldn't be removed from role",
			"enableCommunityMfaLoading": "Enabling Multi Factor Authentication for community",
			"enableCommunityMfaSuccess": "Multi Factor Authentication enabled for community",
			"enableCommunityMfaError": "Something went wrong. Please try again",
			"disableCommunityMfaLoading": "Disabling Multi Factor Authentication for community",
			"disableCommunityMfaSuccess": "Multi Factor Authentication disabled for community",
			"disableCommunityMfaError": "Something went wrong. Please try again"
		}
	},
	"units": {
		"occupied": "Occupied",
		"unoccupied": "Unoccupied",
		"lobbyName": "Lobby Name",
		"lobbyName_other": "Lobby Names",
		"addLobbyName": "Add Lobby Name",
		"inviteResident": "Invite Resident",
		"moveOutResidentAction": "Move Out",
		"moveOutResident": "Move Resident Out",
		"moveOutSuite": "Move Suite Out",
		"moveOutResidentDialogTitle": "Move the resident out",
		"moveOutResidentDialogTextWarning": "This action will remove the resident's access to the building and the suite through the SmartONE App. It can't be undone",
		"moveOutSuiteDialogTitle": "Suite move out",
		"moveOutSuiteDialogTextWarning": "This action will remove suite resident's access to the building and the suite through the SmartONE App. It can't be undone",
		"moveOutAgreement": "I acknowledge that I have the authority to perform this function as the authorized Landlord and/or Property Manager and that I accept all responsibility pertaining to the Tenancy Act of my region and/or the Condo Board regulations for this property",
		"moveOutSuiteInviteOption": "What would you like to do with the existing invitations for the suite?",
		"keepAllInvites": "Keep all invitations",
		"deleteAllInvites": "Delete all invitations",
		"toast": {
			"creatingMoveOutRequest": "Creating move out request",
			"moveOutRequestCreated": "Move out request has been created successfully",
			"createMoveOutRequestError": "Move out request failed",
			"deletingLobbyName": "Deleting lobby name",
			"lobbyNameDeleted": "Lobby name has been successfully deleted",
			"deleteLobbyNameError": "Lobby name could not be deleted",
			"addingLobyName": "Adding lobby name",
			"lobbyNameAdded": "Lobby name has been successfully added",
			"addLobbyNameError": "Lobby name could not be added",
			"sendResidentInviteLoading": "Sending invitation link",
			"sendResidentInviteSuccess": "Invitation link has been sent",
			"sendResidentInviteError": "Invitation link could not be sent",
			"resendResidentInviteLoading": "Resending invitation link",
			"resendResidentInviteSuccess": "Invitation link has been resent",
			"resendResidentInviteError": "Invitation link could not be resent",
			"deleteResidentInviteLoading": "Removing invitation link",
			"deleteResidentInviteSuccess": "Invitation link has been removed",
			"deleteResidentInviteError": "Invitation link could not be removed"
		},
		"addLobbyNameDuplicateError": "Please enter an unused lobby name",
		"duplicateResidentEmailError": "This account is linked to a suite",
		"duplicateResidentInviteEmailError": "Invite already exists",
		"unitsNavigation": "units navigation",
		"noResidents": "There are no residents yet",
		"exportResidentsFilename": "Resident Details List",
		"exportLobbyNamesFilename": "Lobby Name Details List",
		"suiteDetails": "Suite Details",
		"viewAllResidents": "View All Residents",
		"viewSuiteDetails": "View Suite Details",
		"residentDetails": "Resident Details",
		"occupancyStatus": "Occupancy Status",
		"mobile": "Mobile",
		"residentNotificationsTooltip": "These notifications have been enabled by the resident",
		"residentNotificationsTooltipAllDisabled": "This resident has disabled all notifications",
		"exportResidentDetails": "Export Resident Details",
		"exportLobbyNameDetails": "Export Lobby Name Details",
		"residentInvitation": {
			"resendInvite": "Resend Invitation",
			"revokeInvite": "Remove Invitation",
			"removeDialogDescription": "The invitation for {{ email }} will be removed"
		},
		"linked": "User is linked to the wallpad",
		"unlinked": "User is not linked to the wallpad",
		"inviteExpirationDisclaimer": "All invitations will expire 12 hours after being sent",
		"manageInvitations": "Manage Invitations",
		"residentSearchPlaceholder": "Search by resident name",
		"visitorPass": {
			"visitorPass": "Visitor Pass",
			"viewVisitorPass": "View Visitor Pass",
			"accessType": "Access Type",
			"always": "Always",
			"temporary": "Temporary",
			"scheduled": "Scheduled",
			"visitorInfoTitle": "Visitor Information",
			"accessLevel": "Access level",
			"accessSchedule": "Access Schedule",
			"startDateAndTime": "Start Date and Time",
			"endDateAndTime": "End Date and Time",
			"suiteDoor": "Suite Door",
			"searchPlaceholder": "Search name or suite number"
		}
	},
	"temperature": {
		"temperature": "Temperature",
		"control": "Suite Temperature Control",
		"currentTemperature": "Current Temperature",
		"setTemperature": "Set Temperature",
		"fan": "Fan",
		"heat": "Heat",
		"cool": "Cool",
		"system": "System",
		"mode": "Mode",
		"validTemperatureRange": "The valid temperature is from {{ minTemp }}°C to {{ maxTemp }}°C",
		"edit": "Edit Suite Temperature",
		"note": "Please note that changing temperature can take some time",
		"noThermostats": "This suite does not have thermostats",
		"toast": {
			"updatingTemperatureSettings": "Updating temperature settings",
			"temperatureSettingsUpdated": "Temperature settings have been successfully updated",
			"updateTemperatureSettingsError": "Temperature settings could not be updated"
		}
	},
	"wallpads": {
		"wallpad": "Wallpad",
		"model": "Model",
		"site": "Site",
		"version": "Version",
		"thermostat": "Thermostat",
		"thermostat_other": "Thermostats",
		"statuses": {
			"unknown": "Unknown",
			"on": "On",
			"off": "Off",
			"not": "Not"
		}
	},
	"alarmLogs": {
		"suiteAlarms": "Suite Alarms",
		"wallpadsHistory": "Wallpads History",
		"timeDisabled": "Please select a single day for the filter to work",
		"noLogs": "No alarm logs found",
		"statuses": {
			"start": "Start",
			"stop": "Stop",
			"return": "Return"
		},
		"types": {
			"fire": "Smoke Alarm",
			"security": "Stay/Away Alarm",
			"emergency": "Emergency Alarm",
			"leak": "Leak Alarm"
		}
	},
	"editor": {
		"normal": "Normal",
		"largeHeading": "Large Heading",
		"smallHeading": "Small Heading",
		"bulletList": "Bullet List",
		"numberedList": "Numbered List",
		"quote": "Quote",
		"hex": "Hex",
		"undo": "Undo",
		"redo": "Redo",
		"bold": "Bold",
		"italic": "Italic",
		"underline": "Underline",
		"fontColor": "Font color",
		"backgroundColor": "Background color",
		"left": "Left align",
		"centre": "Centre align",
		"right": "Right align",
		"clear": "Clear formatting"
	},
	"userManagement": {
		"managerInvites": "Invites",
		"invite": "Invite",
		"inviteSent": "Invite Sent",
		"inviteAccepted": "Invite Accepted",
		"inviteExpired": "Invite Expired",
		"resendInvite": "Resend Invitation",
		"removeInvite": "Remove Invitation",
		"inviteExpirationDisclaimer": "Invitations will expire within 12 hours of being sent and will be removed from the Invitations List 7 days after expiry",
		"managerInvite": {
			"title": "Invite Team Member",
			"roleSelect": "Add Roles",
			"roleSelectDescription": "You can add multiple roles to a single user. Please add all the roles that should apply to the email listed above",
			"sendButton": "Send Invite",
			"removeButton": "Remove",
			"duplicateManagerEmailError": "This email is already being used for an active manager account",
			"activeInviteError": "Invite already exists",
			"removeInviteDescription": "{{ inviteEmail }} will be removed from the Manager Invite dashboard"
		},
		"domainSettings": {
			"domains": "Domains",
			"placeholder": "E.g. @companyname.com",
			"domainSettingButton": "Domain Settings",
			"domainSettingSubtitle": "Whitelist Domains",
			"domainSettingDescription": "Domain whitelisting is a method of ensuring that no one but your organization can be invited to access your data. Adding a domain(s) below will allow you to send Manager Invites to ONLY the stated domains",
			"allowDomain": "Accepted Email Domains:",
			"helperText": "comma separated",
			"duplicateDomainError": "Domain has already been whitelisted",
			"emptyDomainError": "Please enter a domain"
		},
		"toast": {
			"sendManagerInviteLoading": "Sending invitation link",
			"sendManagerInviteSuccess": "Invitation link has been sent",
			"sendManagerInviteError": "Invitation link could not be sent",
			"resendManagerInviteLoading": "Resending invitation link",
			"resendManagerInviteSuccess": "Invitation link has been resent",
			"resendManagerInviteError": "Invitation link could not be resent",
			"deleteManagerInviteLoading": "Removing invitation link",
			"deleteManagerInviteSuccess": "Invitation link has been removed",
			"deleteManagerInviteError": "Invitation link could not be removed",
			"addDomainLoading": "Adding domain to whitelist",
			"addDomainSuccess": "Successfully added domain",
			"addDomainError": "Domain could not be added",
			"removeDomainLoading": "Removing whitelisted domain",
			"removeDomainSuccess": "Successfully removed whitelisted domain",
			"removeDomainError": "Domain could not be removed"
		}
	},
	"managers": {
		"MFA": {
			"enableMFA": "Enable Community MFA",
			"disableMFA": "Disable Community MFA",
			"description": "Once the MFA is enabled at the community level by the Super Admin, there is no way it can be turned off by any user of the Management Console",
			"confirmTitle": "This Action Affects All Users!",
			"enableConfirmBody": "Once enabled, Multi-Factor Authentication will be mandatory for all Management Console users associated with the community",
			"disableConfirmBody": "Once disabled, Multi-Factor Authentication will be disabled for all Management Console users associated with the community",
			"MfaEnabled": "MFA already enabled",
			"tooltip": "Multi-factor Authentication (MFA) is a method that requires all users to provide two or more verification factors to gain access to their account"
		},
		"exportManagersFilename": "Users List"
	},
	"buildingManagement": {
		"suiteCapacity": {
			"residentsLimit": "Resident Capacity Threshold",
			"residentsLimitDisclamer": "Choose the maximum number of registered apps per suite. When this limit is reached, all building managers will receive notifications. Setting this to 0 will disable notifications",
			"toast": {
				"updatingSettings": "Updating settings",
				"settingsUpdated": "Settings have been successfully updated",
				"updateSettingsError": "Settings could not be updated"
			}
		},
		"automation": {
			"scheduledActions": "Scheduled Actions",
			"scheduleDefinitions": "Schedule",
			"editSchedule": "Edit Schedule",
			"deleteSchedule": "Remove Schedule",
			"noAutomationSchedule": "You have no Automations. Click the Create Automation Schedule button to begin.",
			"runNow": "Run",
			"manuallyRun": "Manually Run Schedule",
			"manuallyRunTooltip": "Manually Run",
			"disableSchedule": "Pause Schedule",
			"enableSchedule": "Resume Schedule",
			"multiSchedules": "Multiple Schedules",
			"form": {
				"createDialogTitle": "Create Automation Schedule",
				"scheduleName": "Schedule Name",
				"actionDisclaimer": "Select the action type that you would like to add to this schedule.",
				"fanSpeed": "Fan speed",
				"deleteDialogTitle": "Remove Schedule",
				"deleteDialogWarning": "Are you sure you want to remove '{{ scheduleName }}' from Schedules? This action cannot be undone.",
				"editDialogTitle": "Edit Automation Schedule",
				"manualTriggerDialogTitle": "Manually Run Schedule",
				"manualTriggerDialogWarning": "Are you sure you want to manually run this schedule?",
				"enableDialogTitle": "Resume Schedule",
				"enableDialogWarning": "Are you sure you want to resume this automation to it’s set schedule?",
				"disableDialogTitle": "Pause Schedule",
				"disableDialogWarning": "Are you sure you want to deactivate '{{ scheduleName }}'? You can easily reactivate it later",
				"occurrence": "Occurrence",
				"occurrenceDisclaimer": "How often would you like this schedule to occur?",
				"addOccurrence": "Add Occurrence",
				"noActionError": "Please set one of the followings in action: mode, temperature, fan speed",
				"invalidTimeError": "Please enter time in the correct format",
				"duplicateSchedule": "This occurrence already exists within this schedule"
			},
			"toast": {
				"createScheduleActionLoading": "Creating automation actions",
				"createScheduleActionSuccess": "Automation actions have been created",
				"createScheduleActionError": "Unable to create action. Try Again",
				"createScheduleLoading": "Schedule is being created",
				"createScheduleSuccess": "Schedule '{{ scheduleName }}' has been created",
				"createScheduleError": "Unable to create schedule. Try Again",
				"updateScheduleLoading": "Schedule is being updated",
				"updateScheduleSuccess": "Schedule updated successfully",
				"updateScheduleError": "Schedule could not be updated. Try Again",
				"triggerScheduleLoading": "'{{ scheduleName }}' is being triggered",
				"triggerScheduleSuccess": "'{{ scheduleName }}' has been triggered",
				"triggerScheduleError": "'{{ scheduleName }}' has not been triggered",
				"disableScheduleLoading": "{{ scheduleName }} is being paused",
				"disableScheduleSuccess": "'{{ scheduleName }}' has been paused",
				"disableScheduleError": "'{{ scheduleName }}' has failed to pause",
				"enableScheduleLoading": "Resuming schedule",
				"enableScheduleSuccess": "The '{{ scheduleName }}' schedule has been resumed",
				"enableScheduleError": "The '{{ scheduleName }}' schedule has failed to resume",
				"deleteScheduleLoading": "Schedule is being removed",
				"deleteScheduleSuccess": "Schedule has been removed",
				"deleteScheduleError": "Schedule could not be removed"
			}
		}
	},
	"accessControl": {
		"doorIDLabel": "Door ID",
		"doorName": "Door Name",
		"editDoor": "Edit door properties",
		"scheduled": "Scheduled",
		"enabled": "Enabled",
		"disabled": "Disabled",
		"onlyEnabled": "Only Enabled",
		"schedule": "Schedule",
		"doorAccessed": "Door Accessed",
		"residentName": "Resident Name",
		"logsSearchPlaceholder": "Search door, resident name or suite number",
		"dateDisclamer": "Please select no more than 2 weeks",
		"toast": {
			"updatingDoor": "Updating door",
			"doorUpdated": "Door has been successfully updated",
			"updateDoorError": "Door could not be updated"
		},
		"minutes": "Minutes",
		"hours": "Hours",
		"errorMessages": {
			"invalidTime": "Please select time range between 00:00-23:59 for the selected day(s)",
			"duplicateSchedule": "Time slot has already been taken",
			"duplicateName": "The Door with this name already exists"
		},
		"doorsSearchPlaceholder": "Search door name",
		"doorStatusDisclmer": "Enabling doors will make it visible on the ONE! App",
		"noScheduleDisclamer": "Unrestricted access without schedule",
		"form": {
			"editDoorButton": "Update Door",
			"conciergeAccess": "Concierge Accesible",
			"conciergeAccessDescription": "Enables 24/7 access on the Concierge App even when doors are disabled"
		}
	},
	"alarmConfig": {
		"alarmRecipients": {
			"addRecipient": "Add Recipient",
			"editRecipient": "Edit Recipient Details",
			"deleteRecipient": "Delete Recipient",
			"deleteRecipientDescription": "Are you sure you want to remove recipient from list? They will no longer receive notifications.",
			"noRecipient": "You have no Alarm recipients added.\nClick the 'Add Recipient' button to begin"
		},
		"form": {
			"addFormTitle": "Add Recipient Detail",
			"editFormTitle": "Edit Recipient Detail",
			"baiscInfoDescription": "Enter details of the recipient for them to receive alarm notifications.",
			"methodDescription": "Select how you want the recipient to get notifications.",
			"noNotificationSelectError": "Please select at least one notification preference",
			"duplicateEmailError": "This email is already in use",
			"duplicatePhoneError": "This phone number is already in use"
		},
		"toast": {
			"addRecipientLoading": "Adding Recipient",
			"addRecipientSuccess": "Recipient has been successfully added",
			"addRecipientError": "Recipient has not been added",
			"editRecipientLoading": "Updating Recipient",
			"editRecipientSuccess": "Recipient has been successfully updated",
			"editRecipientError": "Recipient has not been updated",
			"deleteRecipientLoading": "Deleting Recipient",
			"deleteRecipientSuccess": "Recipient has been successfully deleted",
			"deleteRecipientError": "Recipient has not been deleted"
		}
	},
	"buildingAccessPoint": {
		"createAccessPoint": "Create Building Access Point",
		"editAccessPoint": "Edit Building Access Point",
		"deleteAccessPoint": "Delete Building Access Point",
		"searchPlaceholder": "Search building access point name or door name",
		"name": "Building Access Point name",
		"doorsAssigned": "Doors Assigned",
		"noBuildingAccessPointMsg": "No building access points have been configured",
		"form": {
			"createDialogTitle": "Create Building Access Point",
			"editDialogTitle": "Edit Building Access Point",
			"guestAccessibleLabel": "Makes a Building Access Point visible to the residents under SmartOne!App when creating a visitor invite",
			"guestAccessibleTooltip": "Makes a Building Access Point visible to the residents under SmartOne!App when creating a visitor invite",
			"guestUnaccessibleTooltip": "Makes a Building Access Point invisible to the residents under SmartOne!App when creating a visitor invite",
			"doorSelectionTitle": "Select doors to assign to access point",
			"doorSelectInput": "Select from list of Doors",
			"noDoorError": "Please select at least one door",
			"guestAccessible": "Guest accessible",
			"deleteDialogTitle": "Delete {{ accessPointName }}",
			"deleteDialogWarning": "Are you sure you want to delete this Building Access Point? This will permanently delete it.",
			"duplicateNameError": "This name already exists, please use a different name and try again"
		},
		"toast": {
			"createBuildingAccessPointLoading": "Creating building access point",
			"createBuildingAccessPointSuccess": "Building access point created",
			"createBuildingAccessPointError": "Unable to create building access point",
			"deleteBuildingAccessPointLoading": "Deleting building access point",
			"deleteBuildingAccessPointSuccess": "Building access point deleted",
			"deleteBuildingAccessPointError": "Unable to delete building access point",
			"editBuildingAccessPointLoading": "Updating building access point",
			"editBuildingAccessPointSuccess": "Building access point updated",
			"editBuildingAccessPointError": "Unable to update building access point"
		}
	},
	"messaging": {
		"noMessageHint": "You have no messages"
	},
	"elevatorAccessLogs": {
		"noLogs": "No access log have been recorded",
		"elevatorBank": "Elevator Bank",
		"elevatorName": "Elevator Name"
	}
}
